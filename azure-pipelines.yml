name: Jenkins Agent Packer

trigger:
  branches:
    include:
      - master

pr:
  branches:
    include:
      - master

strategy:
  matrix:
    Ubuntu:
      os: Ubuntu
      templatePath: jenkins-agent-ubuntu.pkr.hcl

parameters:
  - name: azure_image_version
    type: string
    default: ""

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self

  - task: AzureCLI@2
    displayName: Get latest azure image version
    inputs:
      azureSubscription: dts-management-prod-intsvc
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        AZURE_IMAGE_VERSION=$(az sig image-version list --gallery-image-definition jenkins-ubuntu --gallery-name hmcts --resource-group hmcts-image-gallery-rg --query '[].{name:name}' -o tsv | sort -nr | head -n1)
        IFS=. read -r major minor patch <<<"$AZURE_IMAGE_VERSION"
        ((patch++))
        printf -v AZURE_IMAGE_VERSION '%d.%d.%d' "$major" "$minor" "$((patch))"
        echo $AZURE_IMAGE_VERSION
        echo "##vso[task.setvariable variable=azure_image_version]$AZURE_IMAGE_VERSION"

  - task: riezebosch.Packer.PackerTool.PackerTool@0
    displayName: 'Install Packer'
    inputs:
      version: 1.7.4

  - task: riezebosch.Packer.Packer.Packer@1
    displayName: 'Validate'
    inputs:
      templatePath: $(templatePath)
      command: validate
      azureSubscription: dts-management-prod-intsvc


  - task: riezebosch.Packer.Packer.Packer@1
    displayName: 'PR Build'
    name: prbuild
    condition: and(succeeded(), ne(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      templatePath: $(templatePath)
      variables: |
          jenkins_ssh_key=$(JENKINS_SSH_KEY)
          azure_image_version=$(azure_image_version)
      command: build
      azureSubscription: dts-management-prod-intsvc
      options: --only=azure-arm.no-publish
  
  - task: AzureCLI@2
    displayName: Cleanup resources on fail
    condition: failed()
    inputs:
      azureSubscription: dts-management-prod-intsvc
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        resource_group_name=$(echo $(prbuild.DeploymentName) | sed 's/pkrdp//')
        az group show --name "pkr-Resource-Group-$resource_group_name"

  - task: riezebosch.Packer.Packer.Packer@1
    displayName: 'Build and publish'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/master'))
    inputs:
      templatePath: $(templatePath)
      variables: |
          jenkins_ssh_key=$(JENKINS_SSH_KEY)
          azure_image_version=$(azure_image_version)
      command: build
      azureSubscription: dts-management-prod-intsvc
      options: --only=azure-arm.build-and-publish
